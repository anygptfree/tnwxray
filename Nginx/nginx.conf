worker_processes auto;

# 使用相对路径
error_log  logs/error.log warn;
pid        logs/nginx.pid;

events {
    worker_connections  1024;
    multi_accept on;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  logs/access.log main;

    # Performance optimizations
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    client_max_body_size 10m;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Additional settings
    charset utf-8;
    server_tokens off;

    # Main HTTP server on port 8080 (CodeSandbox default exposed port)
    server {
        listen       8080;
        server_name  localhost;

        # For CodeSandbox preview
        location / {
            root   html;
            index  index.html index.htm;
            try_files $uri $uri/ =404;
        }

        # Static files
        location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|webp|pdf|txt|woff|woff2|ttf|otf)$ {
            root html;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            access_log off;
        }

        # VMess WebSocket configuration (伪装成JavaScript文件)
        location = /assets/js/main.js {
            # 如果是WebSocket请求
            if ($http_upgrade = "websocket") {
                proxy_pass http://127.0.0.1:10000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # 如果不是WebSocket请求
            if ($http_upgrade != "websocket") {
                root html;
            }
        }

        # VLess WebSocket configuration (伪装成API数据流)
        location = /api/data/stream {
            # 如果是WebSocket请求
            if ($http_upgrade = "websocket") {
                proxy_pass http://127.0.0.1:20000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # 如果不是WebSocket请求
            if ($http_upgrade != "websocket") {
                root html;
                add_header Content-Type application/json;
            }
        }

        # 健康检查端点
        location = /health {
            access_log off;
            add_header Content-Type application/json;
            return 200 '{"status":"ok","version":"1.0.0"}';
        }

        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
    }
}
